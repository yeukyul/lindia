install.packages("lindia")
library("lindia")
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM, data = Cars93)
install.packages("MASS")
install.packages("MASS")
data("Cars93")
library("MASS")
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
library("lindia")
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
detach("package:vegan", unload=TRUE)
detach("package:lindia", unload=TRUE)
install.packages("~/Desktop/personal/project/lindia/lindia",
repos = NULL,
type = "source")
install.packages("~/Desktop/personal/project/lindia",
repos = NULL,
type = "source")
install.packages("devtools")
# To load package from local files
library("devtools")
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
help(gg_diagnose)
help(lm)
help(ggplot)
help(ggtitle)
help(glm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
install.packages(mosaicData)
install.packages("mosaicData")
install.packages("moderndive")
library(moderndive)
data("SaratogaHouses")
library(mosaicData)
library(moderndive)
data("SaratogaHouses")
mod <- lm(price ~ livingArea, data = SaratogaHouses)
gg_resX(mod)
load_all('~/Desktop/personal/projects/lindia/lindia')
load_all('~/Desktop/personal/projects/lindia/lindia')
load_all('~/Desktop/personal/projects/lindia/lindia')
mod <- lm(price ~ livingArea, data = SaratogaHouses)
gg_resX(mod)
formula(mod)
var_names_list = strsplit(mod, ' ~ ')
lm_formula <- formula(mod)
var_names_list = strsplit(lm_formula, ' ~ ')
lm_formula
strsplit('price ~ livingArea', ' ~ ')
lm_formula = as.character(formula(mod))
var_names_list = strsplit(lm_formula, ' ~ ')
var_name_vec = strsplit_vec(lm_formula, ' ~ ')
args_str = var_name_vec
args = unlist(strsplit_vec(args_str, " \\+ "))
args
# create linear model
cars_lm <- lm(Price ~ Passengers, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
strsplit_vec(args_str, " \\+ ")
args_str
load_all('~/Desktop/personal/projects/lindia/lindia')
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
mod <- lm(price ~ livingArea, data = SaratogaHouses)
gg_resX(mod)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm, mode="base_r")
load_all('~/Desktop/personal/projects/lindia/lindia')
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm, mode="base_r")
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm, mode="base_r")
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm, mode="base_r")
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
grepl("Passengers + Length + RPM", " \\+ ")
grepl("Passengers + Length + RPM", "+")
grepl(" \\+ ", "Passengers + Length + RPM")
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
# create linear model
cars_lm <- lm(Price ~ Passengers, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
setwd('~/Desktop/personal/projects/lindia')
devtools::release()
devtools::check()
setwd('~/Desktop/personal/projects/lindia/lindia')
devtools::check()
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
devtools::check()
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
devtools::check()
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
grepl(" + ", "Passengers + Length + RPM + Origin")
grepl(" \\+ ", "Passengers + Length + RPM + Origin")
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
devtools::check()
devtools::document()
devtools::check()
grepl(" \\+ ", "Passengers + Length + RPM + Origin", fixed = TRUE)
grepl(" \\+ ", "Prices", fixed = TRUE)
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
grepl(" \\+ ", "Passengers + Length + RPM + Origin", fixed = TRUE)
grepl(" \\+ ", "Passengers + Length + RPM + Origin")
strsplit_vec("Passengers + Length + RPM + Origin", " \\+ ")
args_str <- "Passengers + Length + RPM + Origin"
args = unlist(strsplit_vec(args_str, " \\+ "))
args
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
grepl(" \\+ ", args_str, fixed = TRUE)
grepl(" \\+ ", args_str)
grepl("\\+", args_str, fixed=TRUE)
grepl("\+", args_str, fixed=TRUE)
grepl("\\+", args_str, fixed=TRUE)
args_str
grepl(" \\+ ", args_str, fixed=TRUE)
grepl(" \\+ ", args_str)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
devtools::check()
?grepl
grepl(" + ", args_str, fixed=TRUE)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
devtools::check()
devtools::check()
devtools::check()
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
# visualize diagnostic plots with a call to lindia
gg_diagnose(cars_lm)
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# To load package from local files
library("devtools")
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
library("lindia")
library("MASS")
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
lm_object <- cars_lm
lm_formula = as.character(formula(lm_object))
var_names_list = strsplit(lm_formula, ' ~ ')
var_name_vec = strsplit_vec(lm_formula, ' ~ ')
var_names_list
var_name_vec
# if there is more than one term
args = unlist(strsplit_vec(args_str, " \\+ "))
# drop response variable
args_str = var_name_vec
# if there is more than one term
args = unlist(strsplit_vec(args_str, " \\+ "))
args
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
load_all('~/Desktop/personal/projects/lindia/lindia')
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
classof(args_str)
class(args_str)
load_all('~/Desktop/personal/projects/lindia/lindia')
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
# create linear model
cars_lm <- lm(Price ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm)
load_all('~/Desktop/personal/projects/lindia/lindia')
gg_diagnose(cars_lm)
#
library(lindia)
library(mosaicData)
library(moderndive)
data("SaratogaHouses")
mod <- lm(price ~ livingArea, data = SaratogaHouses)
gg_resX(mod)
load_all('~/Desktop/personal/projects/lindia/lindia')
devtools::check()
# To load package from local files
library("devtools")
cars_lm <- lm(Price ~ Passengers, data = Cars93)
gg_diagnose(cars_lm)
urlchecker::url_check()
urlchecker::url_check()
devtools::check()
use_release_issue()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
revdepcheck::revdep_check(num_workers = 4)
install.packages('revdepcheck')
revdepcheck::revdep_check(num_workers = 4)
library(revdepcheck)
install.packages('revdepcheck')
devtools::install_github('r-lib/revdepcheck')
revdepcheck::revdep_check(num_workers = 4)
usethis::use_version('minor')
devtools::submit_cran()
use_cran_comments()
devtools::check()
devtools::check()
use_cran_comments()
devtools::submit_cran()
devtools::revdep_check()
devtools::build_readme()
devtools::build_readme()
devtools::check(remote = TRUE, manual = TRUE)
devtools::submit_cran()
?devtools::check()
?devtools::check_built()
devtools::check_built()
setwd('~/Desktop/personal/projects/lindia/lindia')
devtools::check_win_devel()
devtools::build()
